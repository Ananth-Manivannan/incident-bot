# Default values for janus.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: eb129/janus
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ''

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

db:
  enabled: true
  image: postgres:13
  imagePullPolicy: IfNotPresent
  env:
    - name: POSTGRES_PASSWORD
      value: 'foobar1234'
    - name: POSTGRES_USER
      value: 'postgres'
  resources: {}
  service:
    type: ClusterIP
    port: 5432
    targetPort: db
    protocol: TCP
    name: db

env:
  - name: DATABASE_HOST
    value: 'janus-db'
  - name: DATABASE_NAME
    value: 'postgres'
  - name: DATABASE_USER
    value: 'postgres'
  - name: DATABASE_PASSWORD
    value: 'foobar1234'
  - name: DATABASE_PORT
    value: '5432'
  - name: SLACK_SIGNING_SECRET
    value: ''
  - name: SLACK_BOT_TOKEN
    value: 'xoxb-'
  - name: SLACK_VERIFICATION_TOKEN
    value: ''
  - name: SLACK_WORKSPACE_ID
    value: ''
  - name: INCIDENTS_DIGEST_CHANNEL
    value: 'incidents'
  - name: INCIDENT_AUTO_GROUP_INVITE_ENABLED
    value: 'false'
  - name: INCIDENT_AUTO_GROUP_INVITE_GROUP_NAME
    value: ''
  - name: INCIDENT_EXTERNAL_PROVIDERS_ENABLED
    value: 'false'
  - name: INCIDENT_EXTERNAL_PROVIDERS_LIST
    value: 'github'
  - name: STATUSPAGE_INTEGRATION_ENABLED
    value: 'false'
  - name: STATUSPAGE_API_KEY
    value: ''
  - name: STATUSPAGE_PAGE_ID
    value: ''
  - name: VIDEO_CONFERENCING_LINK
    value: 'https://zoom.com/some-meeting-link'

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  name: bot
  port: 3000
  protocol: TCP
  targetPort: bot
  type: ClusterIP

ingress:
  enabled: false
  className: ''
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

affinity: {}
